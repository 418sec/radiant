Autotest.add_hook :initialize do |at|

  %w{^config/ ^coverage/ ^db/ ^doc/ ^log/ ^public/ ^script ^vendor/rails ^vendor/plugins previous_failures.txt}.each do |exception|
    at.add_exception(exception)
  end

  at.clear_mappings

  at.add_mapping(%r%^(test|spec)/fixtures/(.*).yml$%) { |_, m|
    ["spec/models/#{m[2].singularize}_spec.rb"] + at.files_matching(%r%^spec\/views\/#{m[2]}/.*_spec\.rb$%)
  }
  at.add_mapping(%r%^spec/(models|controllers|views|helpers|lib)/.*rb$%) { |filename, _|
    filename
  }
  at.add_mapping(%r%^app/models/(.*)\.rb$%) { |_, m|
    ["spec/models/#{m[1]}_spec.rb"]
  }
  at.add_mapping(%r%^app/views/(.*)$%) { |_, m|
    at.files_matching %r%^spec/views/#{m[1]}_spec.rb$%
  }
  at.add_mapping(%r%^app/controllers/(.*)\.rb$%) { |_, m|
    if m[1] == "application"
      at.files_matching %r%^spec/controllers/.*_spec\.rb$%
    else
      ["spec/controllers/#{m[1]}_spec.rb"]
    end
  }
  at.add_mapping(%r%^app/helpers/(.*)_helper\.rb$%) { |_, m|
    if m[1] == "application" then
      at.files_matching(%r%^spec/(views|helpers)/.*_spec\.rb$%)
    else
      ["spec/helpers/#{m[1]}_helper_spec.rb"] + at.files_matching(%r%^spec\/views\/#{m[1]}/.*_spec\.rb$%)
    end
  }
  at.add_mapping(%r%^config/routes\.rb$%) {
    at.files_matching %r%^spec/(controllers|views|helpers)/.*_spec\.rb$%
  }
  at.add_mapping(%r%^config/database\.yml$%) { |_, m|
    at.files_matching %r%^spec/models/.*_spec\.rb$%
  }
  at.add_mapping(%r%^(spec/(spec_helper|shared/.*)|config/(boot|environment(s/test)?))\.rb$%) {
    at.files_matching %r%^spec/(models|controllers|views|helpers)/.*_spec\.rb$%
  }
  at.add_mapping(%r%^lib/(.*)\.rb$%) { |_, m|
    ["spec/lib/#{m[1]}_spec.rb"]
  }
  at.add_mapping(%r%^vendor/extensions/(.*)/app/models/(.*)\.rb$%) { |_, m|
    ["vendor/extensions/#{m[1]}/spec/models/#{m[2]}_spec.rb"]
  }
  at.add_mapping(%r%^vendor/extensions/.*/spec/(models|controllers|views|helpers|lib)/.*rb$%) { |filename, _|
    filename
  }
  at.add_mapping(%r%^vendor/extensions/(.*)/app/views/(.*)$%) { |_, m|
    at.files_matching %r%^vendor/extensions/#{m[1]}/spec/views/#{m[2]}_spec.rb$%
  }
  at.add_mapping(%r%^vendor/extensions/(.*)/app/controllers/(.*)\.rb%) { |_, m|
    if m[2] == "#{m[1]}_controller"
      at.files_matching %r%^vendor/extensions/#{m[1]}/spec/controllers/.*_spec\.rb$%
    else
      ["vendor/extensions/#{m[1]}/spec/controllers/#{m[2]}_spec.rb"]
    end
  }
  at.add_mapping(%r%^vendor/extensions/(.*)/app/helpers/(.*)_helper\.rb$%) { |_, m|
    if m[2] == m[1] then
      at.files_matching(%r%^vendor/extensions/#{m[1]}/spec/(views|helpers)/.*_spec\.rb$%)
    else
      ["vendor/extensions/#{m[1]}/spec/helpers/#{m[2]}_helper_spec.rb"] + at.files_matching(%r%^vendor/extensions/#{m[1]}/spec\/views\/#{m[2]}/.*_spec\.rb$%)
    end
  }
  at.add_mapping(%r%^vendor/extensions/(.*)/lib/(.*)\.rb$%) { |_, m|
    ["vendor/extensions/#{m[1]}/spec/lib/#{m[2]}_spec.rb"]
  }
  at.add_mapping(%r%^vendor/extensions/(.*)/(.*)_extension\.rb%) { |_, m|
    at.files_matching(%r%^vendor/extensions/#{m[1]}/spec/.*_spec\.rb$%) if m[1] == m[2]
  }
end